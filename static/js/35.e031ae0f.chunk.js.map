{"version":3,"sources":["views/Spends/DataListSidebar.js","views/Spends/SpendsListConfig.js","views/Spends/SpendsList.js","components/@vuexy/checkbox/CheckboxesVuexy.js","redux/actions/data-list/index.js","components/@vuexy/chips/ChipComponent.js"],"names":["DataListSidebar","state","isLoading","props","relation","relation1","email","address","contact1","contact2","id","name","category","order_status","price","img","popularity","popValue","addNew","handleSubmit","obj","data","_id","usage","updateData","addData","Object","keys","dataParams","length","prevProps","prevState","console","log","this","setState","primaryContact","secondaryContact","show","handleSidebar","className","classnames","size","onClick","options","wheelPropagation","thumbView","FormGroup","src","alt","htmlFor","color","type","hidden","onChange","e","URL","createObjectURL","target","files","Button","Label","for","Input","value","placeholder","Ripple","outline","Spinner","Component","axios","defaults","baseURL","chipColors","delivered","pending","canceled","selectedStyle","rows","selectedHighlighStyle","backgroundColor","boxShadow","transform","ActionsComponent","window","screen","width","currentData","row","deleteRow","CustomHeader","style","marginTop","handleFilter","UncontrolledDropdown","DropdownToggle","total","DataListConfig","totalPages","currentPage","columns","selector","sortable","minWidth","cell","title","item","getSpendData","parsedFilter","handleCurrentData","handleDelete","mobilecolumns","fontSize","maxWidth","amount","allData","rowsPerPage","sidebar","selected","totalRecords","sortIndex","filterData","handleRowsPerPage","page","undefined","history","push","perPage","boolean","deleteData","urlPrefix","parseInt","toast","error","nominee","userId","localStorage","getItem","JSON","parse","label","date","desc","post","then","res","success","catch","userData","handlePagination","getSpendInitialData","height","Progress","text","noHeader","subHeader","selectableRows","responsive","pointerOnHover","selectableRowsHighlight","onSelectedRowsChange","selectedRows","customStyles","subHeaderComponent","index","sortIcon","selectableRowsComponent","Checkbox","selectableRowsComponentProps","icon","dataList","filteredData","connect","SpendsList","Fragment","Row","Col","sm","SpendsListConfig","queryString","location","search","React","CheckBoxesVuexy","defaultChecked","checked","disabled","getData","params","dispatch","a","get","response","getInitialData","getState","Chip","closeChip","closest","remove","avatarImg","avatarText","avatarIcon","avatarColor","closable","closableIcon"],"mappings":"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","file":"static/js/35.e031ae0f.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Label, Input, FormGroup, Button } from 'reactstrap'\nimport { X } from 'react-feather'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport { Spinner } from 'reactstrap'\nimport classnames from 'classnames'\n\nclass DataListSidebar extends Component {\n  state = {\n    //isLoading: props.isLoading,\n    isLoading: this.props.isLoading,\n    relation: 'Son',\n    relation1: 'Son',\n    email: '',\n    address: '',\n    contact1: '',\n    contact2: '',\n    id: '',\n    name: '',\n    category: 'Audio',\n    order_status: 'pending',\n    price: '',\n    img: '',\n    popularity: {\n      popValue: ''\n    }\n  }\n\n  addNew = false\n\n  componentDidUpdate(prevProps, prevState) {\n    console.log('aaaaaaaaaaaaaaaaa', this.props.isLoading)\n    if (this.props.data !== null && prevProps.data === null) {\n      if (this.props.data.id !== prevState.id) {\n        this.setState({ id: this.props.data.id })\n      }\n      if (this.props.data.name !== prevState.name) {\n        this.setState({ name: this.props.data.name })\n      }\n      if (this.props.data.relation !== prevState.relation) {\n        this.setState({ relation: this.props.data.relation })\n      }\n      if (this.props.data.relation !== prevState.relation1) {\n        this.setState({ relation1: this.props.data.relation })\n      }\n      if (this.props.data.address !== prevState.address) {\n        this.setState({ address: this.props.data.address })\n      }\n      if (this.props.data.email !== prevState.email) {\n        this.setState({ email: this.props.data.email })\n      }\n      console.log('hhhhhhhhhhhhhhhhhhhhh', this.props.data, prevState)\n      if (this.props.data.primaryContact !== prevState.contact1) {\n        this.setState({ contact1: this.props.data.primaryContact })\n      }\n      if (this.props.data.secondaryContact !== prevState.contact2) {\n        this.setState({ contact2: this.props.data.secondaryContact })\n      }\n\n      if (this.props.data.order_status !== prevState.order_status) {\n        this.setState({ order_status: this.props.data.order_status })\n      }\n      if (this.props.data.price !== prevState.price) {\n        this.setState({ price: this.props.data.price })\n      }\n      if (this.props.data.img !== prevState.img) {\n        this.setState({ img: this.props.data.img })\n      }\n    }\n    if (this.props.data === null && prevProps.data !== null) {\n      this.setState({\n        id: '',\n        name: '',\n\n        category: 'Son',\n        order_status: 'pending',\n        price: '',\n        img: '',\n        popularity: {\n          popValue: ''\n        }\n      })\n    }\n    if (this.addNew) {\n      this.setState({\n        id: '',\n        name: '',\n        category: 'Son',\n        order_status: 'pending',\n        price: '',\n        img: '',\n        popularity: {\n          popValue: ''\n        }\n      })\n    }\n    this.addNew = false\n  }\n\n  handleSubmit = (obj) => {\n    if (this.props.data !== null) {\n      obj._id = this.props.data._id\n      obj.usage = this.props.data.usage\n\n      this.props.updateData(obj)\n    } else {\n      this.addNew = true\n      this.props.addData(obj)\n    }\n    let params = Object.keys(this.props.dataParams).length\n      ? this.props.dataParams\n      : { page: 1, perPage: 4 }\n    //this.props.handleSidebar(false, true)\n    //this.props.getData(params)\n  }\n\n  render() {\n    let { show, handleSidebar, data } = this.props\n\n    let { name, relation, category, order_status, price, popularity, img } =\n      this.state\n    return (\n      <div\n        className={classnames('data-list-sidebar', {\n          show: show\n        })}\n      >\n        <div className=\"data-list-sidebar-header mt-2 px-2 d-flex justify-content-between\">\n          <h4>{data !== null ? 'UPDATE SPEND DETAILS' : 'ADD NEW SPEND'}</h4>\n          <X size={20} onClick={() => handleSidebar(false, true)} />\n        </div>\n        {/* {this.props.isLoading && <Spinner color=\"primary\" />}\n        {!this.props.isLoading && */}\n        <PerfectScrollbar\n          className=\"data-list-fields px-2 mt-3\"\n          options={{ wheelPropagation: false }}\n        >\n          {this.props.thumbView && img.length ? (\n            <FormGroup className=\"text-center\">\n              <img className=\"img-fluid\" src={img} alt={name} />\n              <div className=\"d-flex flex-wrap justify-content-between mt-2\">\n                <label\n                  className=\"btn btn-flat-primary\"\n                  htmlFor=\"update-image\"\n                  color=\"primary\"\n                >\n                  Upload Image\n                  <input\n                    type=\"file\"\n                    id=\"update-image\"\n                    hidden\n                    onChange={(e) =>\n                      this.setState({\n                        img: URL.createObjectURL(e.target.files[0])\n                      })\n                    }\n                  />\n                </label>\n                <Button\n                  color=\"flat-danger\"\n                  onClick={() => this.setState({ img: '' })}\n                >\n                  Remove Image\n                </Button>\n              </div>\n            </FormGroup>\n          ) : null}\n          <FormGroup>\n            <Label for=\"data-name\">Item</Label>\n            <Input\n              type=\"text\"\n              value={name}\n              placeholder=\"\"\n              onChange={(e) => this.setState({ name: e.target.value })}\n              id=\"data-name\"\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"data-category\">Label *</Label>\n            <Input\n              type=\"select\"\n              id=\"data-category\"\n              value={relation}\n              onChange={(e) =>\n                this.setState({\n                  relation: e.target.value,\n                  relation1: e.target.value\n                })\n              }\n            >\n              <option>Groceries</option>\n              <option>Cigretes</option>\n              <option>Drink</option>\n              <option>Party</option>\n              <option>Fees</option>\n              <option>Rent</option>\n              <option>Travel</option>\n              <option>Snacks</option>\n              <option>Fuel</option>\n              <option>others</option>\n            </Input>\n          </FormGroup>\n          {relation === 'others' && (\n            <FormGroup>\n              {/* <Label for=\"data-name\">Relation </Label> */}\n              <Input\n                type=\"text\"\n                //value={this.state.relation1}\n                placeholder=\"Label Name\"\n                onChange={(e) => this.setState({ relation1: e.target.value })}\n                id=\"data-name\"\n              />\n            </FormGroup>\n          )}\n          <FormGroup>\n            <Label for=\"data-name\">Date *</Label>\n            <Input\n              type=\"date\"\n              value={this.state.email}\n              placeholder=\"Enter nominee email\"\n              onChange={(e) => this.setState({ email: e.target.value })}\n              id=\"data-name\"\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"data-price\">Amount *</Label>\n            <Input\n              type=\"number\"\n              value={this.state.contact1}\n              onChange={(e) => this.setState({ contact1: e.target.value })}\n              id=\"data-price\"\n              placeholder=\"Enter spend amount\"\n            />\n          </FormGroup>\n\n          <FormGroup>\n            <Label for=\"data-name\">Description *</Label>\n            <Input\n              type=\"textarea\"\n              value={this.state.address}\n              placeholder=\"\"\n              onChange={(e) => this.setState({ address: e.target.value })}\n              id=\"data-name\"\n            />\n          </FormGroup>\n          {/* <FormGroup>\n            <Label for=\"data-popularity\">Popularity</Label>\n            <Input\n              type=\"number\"\n              value={popularity.popValue}\n              id=\"data-popularity\"\n              placeholder=\"0 - 100%\"\n              onChange={e =>\n                this.setState({\n                  popularity: { popularity, popValue: e.target.value }\n                })\n              }\n            />\n          </FormGroup>\n          <FormGroup>\n            <Label for=\"data-status\">Order Status</Label>\n            <Input\n              type=\"select\"\n              id=\"data-status\"\n              value={order_status}\n              onChange={e => this.setState({ order_status: e.target.value })}>\n              <option>pending</option>\n              <option>canceled</option>\n              <option>delivered</option>\n              <option>on hold</option>\n            </Input>\n          </FormGroup> */}\n\n          {this.props.thumbView && img.length <= 0 ? (\n            <label\n              className=\"btn btn-primary\"\n              htmlFor=\"upload-image\"\n              color=\"primary\"\n            >\n              Upload Image\n              <input\n                type=\"file\"\n                id=\"upload-image\"\n                hidden\n                onChange={(e) =>\n                  this.setState({ img: URL.createObjectURL(e.target.files[0]) })\n                }\n              />\n            </label>\n          ) : null}\n        </PerfectScrollbar>\n        <div className=\"data-list-sidebar-footer px-2 d-flex justify-content-start align-items-center mt-1\">\n          <Button.Ripple\n            // className=\"ml-1\"\n            className=\"mb-1\"\n            color=\"secondary\"\n            outline\n            onClick={() => handleSidebar(false, true)}\n          >\n            Cancel\n          </Button.Ripple>\n          <Button.Ripple\n            color=\"warning\"\n            type=\"reset\"\n            className=\"ml-1 mr-1 mb-1\"\n            onClick={() => this.handleSubmit(this.state)}\n          >\n            {this.props.isLoading && <Spinner color=\"danger\" size=\"sm\" />}{' '}\n            {data !== null\n              ? this.props.isLoading\n                ? 'Updating...'\n                : 'Update'\n              : this.props.isLoading\n              ? 'Adding...'\n              : 'Add'}\n          </Button.Ripple>\n        </div>\n      </div>\n    )\n  }\n}\nexport default DataListSidebar\n","import React, { Component } from 'react'\nimport {\n  Button,\n  Progress,\n  UncontrolledDropdown,\n  DropdownMenu,\n  DropdownToggle,\n  DropdownItem,\n  Input\n} from 'reactstrap'\nimport { toast } from 'react-toastify'\nimport DataTable from 'react-data-table-component'\nimport classnames from 'classnames'\nimport ReactPaginate from 'react-paginate'\nimport { history } from '../../history'\nimport { ToastContainer } from 'react-toastify'\nimport {\n  Edit,\n  Trash,\n  ChevronDown,\n  Plus,\n  Check,\n  ChevronLeft,\n  ChevronRight\n} from 'react-feather'\nimport { connect } from 'react-redux'\nimport {\n  getSpendData,\n  getSpendInitialData,\n  deleteData,\n  updateData,\n  addData,\n  filterData\n} from '../../redux/actions/data-list'\nimport 'react-toastify/dist/ReactToastify.css'\nimport '../../assets/scss/plugins/extensions/toastr.scss'\nimport Sidebar from './DataListSidebar'\nimport axios from 'axios'\nimport Chip from '../../components/@vuexy/chips/ChipComponent'\nimport Checkbox from '../../components/@vuexy/checkbox/CheckboxesVuexy'\n\nimport '../../assets/scss/plugins/extensions/react-paginate.scss'\nimport '../../assets/scss/pages/data-list.scss'\naxios.defaults.baseURL = \"https://paragonhealthcare.herokuapp.com\";\n//axios.defaults.baseURL = \"http://localhost:5000\";\n\nconst chipColors = {\n  'on hold': 'warning',\n  delivered: 'success',\n  pending: 'primary',\n  canceled: 'danger'\n}\n\nconst selectedStyle = {\n  rows: {\n    selectedHighlighStyle: {\n      backgroundColor: 'rgba(115,103,240,.05)',\n      color: '#7367F0 !important',\n      boxShadow: '0 0 1px 0 #7367F0 !important',\n      '&:hover': {\n        transform: 'translateY(0px) !important'\n      }\n    }\n  }\n}\n\nconst ActionsComponent = (props) => {\n  return (\n    <div className=\"data-list-action\">\n      <Edit\n        className=\"cursor-pointer mr-1\"\n        size={window.screen.width < 600 ? 13 : 20}\n        onClick={() => {\n          return props.currentData(props.row)\n        }}\n      />\n      {window.screen.width > 600 && (\n        <Trash\n          className=\"cursor-pointer\"\n          size={window.screen.width < 600 ? 13 : 20}\n          onClick={() => {\n            props.deleteRow(props.row)\n          }}\n        />\n      )}\n    </div>\n  )\n}\n\nconst CustomHeader = (props) => {\n  return (\n    <div className=\"data-list-header d-flex justify-content-between flex-wrap\">\n      <div className=\"actions-left d-flex flex-wrap\">\n        <Button\n          className=\"add-new-btn\"\n          color=\"primary\"\n          style={{ marginTop: '5px' }}\n          onClick={() => props.handleSidebar(true, true)}\n          outline\n        >\n          <Plus size={15} />\n          <span className=\"align-middle\">Add New Spend</span>\n        </Button>\n      </div>\n      <div className=\"actions-right\">\n        <div className=\"filter-section mt-sm-0 mt-4\">\n          <Input\n            type=\"text\"\n            style={{ marginTop: '5px', width: '' }}\n            onChange={(e) => props.handleFilter(e)}\n            placeholder=\"Search Spends Log\"\n          />\n        </div>\n      </div>\n      <div className=\"actions-right d-flex flex-wrap mt-sm-0 mt-2\">\n        <UncontrolledDropdown\n          className=\"data-list-rows-dropdown mr-1 d-md-block d-none\"\n          style={{ marginTop: '5px' }}\n        >\n          <DropdownToggle color=\"\" className=\"sort-dropdown\">\n            <span className=\"align-middle mx-50\">\n              {/* {`${props.index[0]} - ${props.index[1]} of ${props.total}`} */}\n              Total Count : {props.total}\n            </span>\n            {/* <ChevronDown size={15} /> */}\n          </DropdownToggle>\n          {/* <DropdownMenu tag=\"div\" right>\n            <DropdownItem tag=\"a\" onClick={() => props.handleRowsPerPage(4)}>\n              4\n            </DropdownItem>\n            <DropdownItem tag=\"a\" onClick={() => props.handleRowsPerPage(10)}>\n              10\n            </DropdownItem>\n            <DropdownItem tag=\"a\" onClick={() => props.handleRowsPerPage(15)}>\n              15\n            </DropdownItem>\n            <DropdownItem tag=\"a\" onClick={() => props.handleRowsPerPage(20)}>\n              20\n            </DropdownItem> \n          </DropdownMenu>*/}\n        </UncontrolledDropdown>\n        {/* <UncontrolledDropdown\n          className=\"data-list-dropdown mr-1\"\n          style={{ marginTop: \"5px\" }}\n        >\n          <DropdownToggle className=\"p-1\" color=\"primary\">\n            <span className=\"align-middle mr-1\">Actions</span>\n            <ChevronDown size={15} />\n          </DropdownToggle>\n          <DropdownMenu tag=\"div\" right>\n            <DropdownItem tag=\"a\">Delete</DropdownItem>\n            <DropdownItem tag=\"a\">Archive</DropdownItem>\n            <DropdownItem tag=\"a\">Print</DropdownItem>\n            <DropdownItem tag=\"a\">Export</DropdownItem>\n          </DropdownMenu>\n        </UncontrolledDropdown> */}\n      </div>\n    </div>\n  )\n}\n\nclass DataListConfig extends Component {\n  static getDerivedStateFromProps(props, state) {\n    if (\n      props.dataList.data.length !== state.data.length ||\n      state.currentPage !== props.parsedFilter.page\n    ) {\n      return {\n        data: props.dataList.data,\n        allData: props.dataList.filteredData,\n        //totalPages: props.dataList.totalPages,\n        totalPages: props.dataList.data.length / 5,\n        currentPage: parseInt(props.parsedFilter.page) - 1,\n        rowsPerPage: parseInt(props.parsedFilter.perPage),\n        totalRecords: props.dataList.totalRecords,\n        sortIndex: props.dataList.sortIndex\n      }\n    }\n\n    // Return null if the state hasn't changed\n    return null\n  }\n\n  state = {\n    data: [],\n    totalPages: 0,\n    currentPage: 0,\n    columns: [\n      {\n        name: 'Item',\n        selector: 'item',\n        sortable: true,\n        minWidth: '200px',\n        cell: (row) => (\n          <p title={row.item} className=\"text-truncate text-bold-500 mb-0\">\n            {row.item}\n          </p>\n        )\n      },\n      {\n        name: 'Label',\n        selector: 'label',\n        sortable: true\n      },\n      {\n        name: 'Date',\n        minWidth: '200px',\n        selector: 'date',\n        sortable: true\n        // cell: row => (\n        //   <Progress\n        //     className=\"w-100 mb-0\"\n        //     color={row.popularity.color}\n        //     value={row.popularity.popValue}\n        //   />\n        //)\n      },\n      {\n        name: 'Amount',\n        selector: 'amount',\n        minWidth: '150px',\n        sortable: true\n        //cell: row => `$${row.price}`\n      },\n      {\n        name: 'Description',\n        selector: 'desc',\n        minWidth: '150px',\n        sortable: true\n        //cell: row => `$${row.price}`\n      },\n\n      {\n        name: 'Actions',\n        sortable: true,\n        cell: (row) => (\n          <ActionsComponent\n            row={row}\n            getSpendData={this.props.getSpendData}\n            parsedFilter={this.props.parsedFilter}\n            currentData={this.handleCurrentData}\n            deleteRow={this.handleDelete}\n          />\n        )\n      }\n    ],\n    mobilecolumns: [\n      {\n        name: 'Item',\n        selector: 'item',\n        sortable: true,\n        minWidth: '50px',\n        cell: (row) => (\n          <p\n            style={{ fontSize: '10px' }}\n            title={row.item}\n            className=\"text-truncate text-bold-500 mb-0\"\n          >\n            {row.item}\n          </p>\n        )\n      },\n      {\n        name: 'Amount',\n        selector: 'amount',\n        maxWidth: '50px',\n        sortable: true,\n        cell: (row) => (\n          <p\n            style={{ fontSize: '10px' }}\n            title={row.amount}\n            className=\"text-truncate text-bold-500 mb-0\"\n          >\n            {row.amount}\n          </p>\n        )\n      },\n\n      {\n        name: '',\n        sortable: true,\n        width: '50px',\n        cell: (row) => (\n          <ActionsComponent\n            row={row}\n            getSpendData={this.props.getSpendData}\n            parsedFilter={this.props.parsedFilter}\n            currentData={this.handleCurrentData}\n            deleteRow={this.handleDelete}\n          />\n        )\n      }\n    ],\n    allData: [],\n    value: '',\n    rowsPerPage: 4,\n    sidebar: false,\n    currentData: null,\n    selected: [],\n    totalRecords: 0,\n    sortIndex: [],\n    addNew: '',\n    isLoading: false\n  }\n\n  thumbView = this.props.thumbView\n\n  componentDidMount() {\n    this.props.getSpendData(this.props.parsedFilter)\n    this.props.getSpendInitialData()\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.thumbView) {\n      this.thumbView = false\n      let columns = [\n        {\n          name: 'Image',\n          selector: 'img',\n          minWidth: '220px',\n          cell: (row) => <img src={row.img} height=\"100\" alt={row.name} />\n        },\n        {\n          name: 'Name',\n          selector: 'name',\n          sortable: true,\n          minWidth: '250px',\n          cell: (row) => (\n            <p title={row.name} className=\"text-truncate text-bold-500 mb-0\">\n              {row.name}\n            </p>\n          )\n        },\n        {\n          name: 'Category',\n          selector: 'category',\n          sortable: true\n        },\n        {\n          name: 'Popularity',\n          selector: 'popularity',\n          sortable: true,\n          cell: (row) => (\n            <Progress\n              className=\"w-100 mb-0\"\n              color={row.popularity.color}\n              value={row.popularity.popValue}\n            />\n          )\n        },\n        {\n          name: 'Order Status',\n          selector: 'order_status',\n          sortable: true,\n          cell: (row) => (\n            <Chip\n              className=\"m-0\"\n              color={chipColors[row.order_status]}\n              text={row.order_status}\n            />\n          )\n        },\n        {\n          name: 'Price',\n          selector: 'price',\n          sortable: true,\n          cell: (row) => `$${row.price}`\n        },\n        {\n          name: 'Actions',\n          sortable: true,\n          cell: (row) => (\n            <ActionsComponent\n              row={row}\n              getSpendData={this.props.getSpendData}\n              parsedFilter={this.props.parsedFilter}\n              currentData={this.handleCurrentData}\n              deleteRow={this.handleDelete}\n            />\n          )\n        }\n      ]\n      this.setState({ columns })\n    }\n  }\n\n  handleFilter = (e) => {\n    this.setState({ value: e.target.value })\n    this.props.filterData(e.target.value)\n  }\n\n  handleRowsPerPage = (value) => {\n    let { parsedFilter, getSpendData } = this.props\n    let page = parsedFilter.page !== undefined ? parsedFilter.page : 1\n    history.push(`/nominee/list?page=${page}&perPage=${value}`)\n    this.setState({ rowsPerPage: value })\n    getSpendData({ page: parsedFilter.page, perPage: value })\n  }\n\n  handleSidebar = (boolean, addNew = false) => {\n    this.setState({ sidebar: boolean })\n    if (addNew === true) this.setState({ currentData: null, addNew: true })\n  }\n\n  handleDelete = (row) => {\n    this.props.deleteData(row)\n    this.props.getSpendData(this.props.parsedFilter)\n    if (this.state.data.length - 1 === 0) {\n      let urlPrefix = this.props.thumbView\n        ? '/data-list/thumb-view/'\n        : '/#/nominee/list/'\n      history.push(\n        `${urlPrefix}list-view?page=${parseInt(\n          this.props.parsedFilter.page - 1\n        )}&perPage=${this.props.parsedFilter.perPage}`\n      )\n      this.props.getSpendData({\n        page: this.props.parsedFilter.page - 1,\n        perPage: this.props.parsedFilter.perPage\n      })\n    }\n  }\n  //  addData = async (obj) => {\n  addData = (obj) => {\n    if (\n      obj.name === '' ||\n      obj.relation1 === '' ||\n      obj.email === '' ||\n      obj.contact1 === '' ||\n      obj.address === ''\n    ) {\n      toast.error('Please Fill All Mandatory Details')\n    } else {\n      this.setState({ isLoading: true })\n      console.log('aaquib', obj)\n      let userData = localStorage.getItem('logInUserData')\n        ? JSON.parse(localStorage.getItem('logInUserData'))\n        : {}\n      const nominee = {\n        userId: userData._id,\n        item: obj.name,\n        label: obj.relation1,\n        date: obj.email,\n        amount: obj.contact1,\n        desc: obj.address\n      }\n      axios\n        .post('/backendapi/spend/add', nominee)\n        .then((res) => {\n          this.setState({ isLoading: false })\n          toast.success('Spend Added Successfully')\n          this.handleSidebar(false, true)\n\n          this.props.getSpendData(this.props.parsedFilter)\n        })\n        .catch((e) => {\n          this.setState({ isLoading: false })\n          toast.error('Add Spend Failed! Please contact admin')\n        })\n\n      console.log('aaquib', nominee)\n    }\n  }\n  updateData = (obj) => {\n    if (\n      obj.name === '' ||\n      obj.relation1 === '' ||\n      obj.email === '' ||\n      obj.contact1 === '' ||\n      obj.address === ''\n    ) {\n      toast.error('Please Fill All Mandatory Details')\n    } else {\n      this.setState({ isLoading: true })\n      console.log('aaquib', obj)\n      let userData = localStorage.getItem('logInUserData')\n        ? JSON.parse(localStorage.getItem('logInUserData'))\n        : {}\n      const nominee = {\n        _id: obj._id,\n        userId: userData._id,\n        item: obj.name,\n        label: obj.relation1,\n        date: obj.email,\n        amount: obj.contact1,\n        desc: obj.address\n      }\n      axios\n        .post('/backendapi/spend/update', nominee)\n        .then((res) => {\n          this.setState({ isLoading: false })\n          toast.success('Spend Updated Successfully')\n          this.handleSidebar(false, true)\n\n          this.props.getSpendData(this.props.parsedFilter)\n        })\n        .catch((e) => {\n          this.setState({ isLoading: false })\n          toast.error('Add Nominee Failed! Please contact admin')\n        })\n\n      console.log('aaquib', nominee)\n    }\n  }\n  handleCurrentData = (obj) => {\n    obj.name = obj.item\n    obj.relation1 = obj.label\n    obj.relation = obj.label\n    obj.email = obj.date\n    obj.address = obj.desc\n    obj.primaryContact = obj.amount\n\n    this.setState({ currentData: obj })\n\n    this.handleSidebar(true)\n  }\n\n  handlePagination = (page) => {\n    let { parsedFilter, getSpendData } = this.props\n    let perPage = parsedFilter.perPage !== undefined ? parsedFilter.perPage : 4\n    let urlPrefix = this.props.thumbView\n      ? '/#/nominee/list/'\n      : '/#/nominee/list/'\n    history.push(\n      `${urlPrefix}list-view?page=${page.selected + 1}&perPage=${perPage}`\n    )\n    getSpendData({ page: page.selected + 1, perPage: perPage })\n    this.setState({ currentPage: page.selected })\n  }\n\n  render() {\n    let {\n      columns,\n      data,\n      allData,\n      totalPages,\n      value,\n      rowsPerPage,\n      currentData,\n      sidebar,\n      totalRecords,\n      sortIndex\n    } = this.state\n    return (\n      <div\n        className={`data-list ${\n          this.props.thumbView ? 'thumb-view' : 'list-view'\n        }`}\n      >\n        <DataTable\n          width=\"200\"\n          columns={\n            window.screen.width < 600 ? this.state.mobilecolumns : columns\n          }\n          data={value.length ? allData : data}\n          // pagination\n          // paginationServer\n          // paginationComponent={() => (\n          //   <ReactPaginate\n          //     previousLabel={<ChevronLeft size={15} />}\n          //     nextLabel={<ChevronRight size={15} />}\n          //     breakLabel=\"...\"\n          //     breakClassName=\"break-me\"\n          //     pageCount={totalPages}\n          //     containerClassName=\"vx-pagination separated-pagination pagination-end pagination-sm mb-0 mt-2\"\n          //     activeClassName=\"active\"\n          //     forcePage={\n          //       this.props.parsedFilter.page\n          //         ? parseInt(this.props.parsedFilter.page - 1)\n          //         : 0\n          //     }\n          //     onPageChange={(page) => this.handlePagination(page)}\n          //   />\n          // )}\n          noHeader\n          subHeader\n          selectableRows={window.screen.width < 600 ? false : true}\n          responsive\n          pointerOnHover\n          selectableRowsHighlight\n          onSelectedRowsChange={(data) =>\n            this.setState({ selected: data.selectedRows })\n          }\n          customStyles={selectedStyle}\n          subHeaderComponent={\n            <CustomHeader\n              handleSidebar={this.handleSidebar}\n              handleFilter={this.handleFilter}\n              handleRowsPerPage={this.handleRowsPerPage}\n              rowsPerPage={rowsPerPage}\n              total={totalRecords}\n              index={sortIndex}\n            />\n          }\n          sortIcon={<ChevronDown />}\n          selectableRowsComponent={Checkbox}\n          selectableRowsComponentProps={{\n            color: 'primary',\n            icon: <Check className=\"vx-icon\" size={12} />,\n            label: '',\n            size: 'sm'\n          }}\n        />\n        <Sidebar\n          show={sidebar}\n          data={currentData}\n          updateData={this.updateData}\n          addData={this.addData}\n          isLoading={this.state.isLoading}\n          handleSidebar={this.handleSidebar}\n          thumbView={this.props.thumbView}\n          getSpendData={this.props.getSpendData}\n          dataParams={this.props.parsedFilter}\n          addNew={this.state.addNew}\n        />\n        <div\n          className={classnames('data-list-overlay', {\n            show: sidebar\n          })}\n          onClick={() => this.handleSidebar(false, true)}\n        />\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    dataList: state.dataList\n  }\n}\n\nexport default connect(mapStateToProps, {\n  getSpendData,\n  deleteData,\n  updateData,\n  addData,\n  getSpendInitialData,\n  filterData\n})(DataListConfig)\n","import React from 'react'\nimport { Row, Col } from 'reactstrap'\nimport SpendsListConfig from './SpendsListConfig'\nimport queryString from 'query-string'\nimport { ToastContainer } from 'react-toastify'\nclass SpendsList extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <h2 className=\"warning\">Daily Spends</h2>\n        {/* <Breadcrumbs\n          breadCrumbTitle=\"Daily Spends\"\n          breadCrumbParent=\"Spends\"\n          breadCrumbActive=\"List\"\n        /> */}\n        <Row>\n          <ToastContainer />\n          <Col sm=\"12\">\n            <SpendsListConfig\n              parsedFilter={queryString.parse(this.props.location.search)}\n            />\n          </Col>\n        </Row>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default SpendsList\n","import React from 'react'\nclass CheckBoxesVuexy extends React.Component {\n  render() {\n    return (\n      <div\n        className={`vx-checkbox-con ${\n          this.props.className ? this.props.className : ''\n        } vx-checkbox-${this.props.color}`}\n      >\n        <input\n          type=\"checkbox\"\n          defaultChecked={this.props.defaultChecked}\n          checked={this.props.checked}\n          value={this.props.value}\n          disabled={this.props.disabled}\n          onClick={this.props.onClick ? this.props.onClick : null}\n          onChange={this.props.onChange ? this.props.onChange : null}\n        />\n        <span\n          className={`vx-checkbox vx-checkbox-${\n            this.props.size ? this.props.size : 'md'\n          }`}\n        >\n          <span className=\"vx-checkbox--check\">{this.props.icon}</span>\n        </span>\n        <span>{this.props.label}</span>\n      </div>\n    )\n  }\n}\n\nexport default CheckBoxesVuexy\n","import axios from 'axios'\n//axios.defaults.baseURL = 'https://lastarzi2.herokuapp.com'\naxios.defaults.baseURL = \"https://paragonheathcare.herokuapp.com\";\n//axios.defaults.baseURL = \"http://localhost:5000\";\nexport const getData = (params) => {\n  return async (dispatch) => {\n    let userData = localStorage.getItem('logInUserData')\n      ? JSON.parse(localStorage.getItem('logInUserData'))\n      : {}\n    await axios\n      .get('/backendapi/nominee/list/' + userData._id, params)\n      .then((response) => {\n        console.log('aaquib  123', response.data)\n        console.log('aaquib  123', params)\n        dispatch({\n          type: 'GET_DATA',\n          data: response.data,\n          totalPages: response.length,\n          params\n        })\n      })\n  }\n}\n\nexport const getSpendData = (params) => {\n  return async (dispatch) => {\n    let userData = localStorage.getItem('logInUserData')\n      ? JSON.parse(localStorage.getItem('logInUserData'))\n      : {}\n    await axios\n      .get('/backendapi/spend/list/' + userData._id, params)\n      .then((response) => {\n        console.log('aaquib  123', response.data)\n        console.log('aaquib  123', params)\n        dispatch({\n          type: 'GET_DATA',\n          data: response.data,\n          totalPages: response.length,\n          params\n        })\n      })\n  }\n}\n\nexport const getInitialData = () => {\n  let userData = localStorage.getItem('logInUserData')\n    ? JSON.parse(localStorage.getItem('logInUserData'))\n    : {}\n  return async (dispatch) => {\n    await axios\n      .get('/backendapi/nominee/list/' + userData._id)\n      .then((response) => {\n        dispatch({ type: 'GET_ALL_DATA', data: response.data })\n      })\n  }\n}\n\nexport const getSpendInitialData = () => {\n  let userData = localStorage.getItem('logInUserData')\n    ? JSON.parse(localStorage.getItem('logInUserData'))\n    : {}\n  return async (dispatch) => {\n    await axios\n      .get('/backendapi/spend/list/' + userData._id)\n      .then((response) => {\n        dispatch({ type: 'GET_ALL_DATA', data: response.data })\n      })\n  }\n}\n\nexport const filterData = (value) => {\n  return (dispatch) => dispatch({ type: 'FILTER_DATA', value })\n}\n\nexport const deleteData = (obj) => {\n  return (dispatch) => {\n    console.log('DELETE DATA :', obj)\n    axios.post('/backendapi/nominee/delete', obj).then((response) => {\n      dispatch({ type: 'DELETE_DATA', obj })\n    })\n  }\n}\n\nexport const updateData = (obj) => {\n  console.log('Aaquib 123', obj)\n  return (dispatch, getState) => {\n    axios\n      .post('/api/datalist/update-data', {\n        obj\n      })\n      .then((response) => {\n        dispatch({ type: 'UPDATE_DATA', obj })\n      })\n  }\n}\n\nexport const addData = (obj) => {\n  return (dispatch, getState) => {\n    let params = getState().dataList.params\n    axios\n      .post('/api/datalist/add-data', {\n        obj\n      })\n      .then((response) => {\n        dispatch({ type: 'ADD_DATA', obj })\n        dispatch(getData(params))\n      })\n  }\n}\n","import React from 'react'\nimport { X } from 'react-feather'\nclass Chip extends React.Component {\n  closeChip = (e) => {\n    e.target.closest('.chip').remove()\n  }\n\n  render() {\n    return (\n      <div\n        className={`chip ${this.props.className} ${\n          this.props.color ? `chip-${this.props.color}` : null\n        }`}\n      >\n        <div className=\"chip-body\">\n          {(!this.props.avatarImg && this.props.avatarText) ||\n          (!this.props.avatarImg && this.props.avatarIcon) ? (\n            <div\n              className={`avatar ${\n                this.props.avatarColor ? `bg-${this.props.avatarColor}` : null\n              }`}\n            >\n              <div className=\"avatar-content\">\n                {this.props.avatarText ? this.props.avatarText : null}\n                {this.props.avatarIcon ? this.props.avatarIcon : null}\n              </div>\n            </div>\n          ) : this.props.avatarImg ? (\n            <div className=\"avatar\">\n              <img\n                src={this.props.avatarImg}\n                alt=\"chipImg\"\n                height=\"20\"\n                width=\"20\"\n              />\n            </div>\n          ) : null}\n          <div className=\"chip-text\">{this.props.text}</div>\n          {this.props.closable ? (\n            <div className=\"chip-closable\" onClick={(e) => this.closeChip(e)}>\n              {this.props.closableIcon ? this.props.closableIcon : <X />}\n            </div>\n          ) : null}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Chip\n"],"sourceRoot":""}
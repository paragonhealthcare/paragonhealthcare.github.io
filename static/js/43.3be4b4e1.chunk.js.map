{"version":3,"sources":["redux/actions/diary/index.js","views/Diary/DiarySidebar.js","views/Diary/DiaryList.js","views/Diary/TaskSidebar.js","views/Diary/Diary.js","components/@vuexy/checkbox/CheckboxesVuexy.js"],"names":["axios","defaults","baseURL","getTodos","routeParams","user","JSON","parse","localStorage","getItem","_id","dispatch","a","get","params","then","result","console","log","data","type","todos","catch","err","completeTask","todo","id","value","isCompleted","starTask","Promise","all","isStarred","importantTask","isImportant","DiarySidebar","Fragment","className","onClick","props","mainSidebar","size","Button","Ripple","block","color","addTask","options","wheelPropagation","ListGroup","ListGroupItem","action","changeFilter","active","this","routerProps","location","pathname","React","Component","connect","filter","history","push","DiaryList","state","handleUpdateTask","currentLocation","handleOnChange","e","setState","target","searchTask","match","app","routerFilter","todosArr","length","filteredTodos","undefined","renderTodos","map","i","today","Date","createdAt","style","border","padding","key","Alert","title","tags","tag","stopPropagation","trashTask","fontSize","toLocaleDateString","weekday","year","month","day","desc","wordBreak","whiteSpace","FormGroup","display","margin","justifyContent","borderRadius","Input","width","placeholder","onChange","routeParam","todoApp","getState","post","response","val","colourOptions1","label","isFixed","TaskSidebar","audioDetails","url","blob","chunks","duration","h","m","s","ptype","taskToUpdate","taskTitle","taskDesc","taskStatus","taskStarred","taskImportant","newTask","handleAudioStop","handleAudioUpload","file","handleRest","handleNewTaskTags","tagsArr","includes","splice","indexOf","renderTags","taskArr","prevProps","prevState","addTaskState","icon","checked","UncontrolledDropdown","DropdownToggle","DropdownMenu","right","DropdownItem","updateLabel","classNamePrefix","ref","selectAssetRef","name","isClearable","onRecordingComplete","videoBlob","record","audioURL","showUIAudio","rows","outline","updateTask","addNewTask","disabled","ans","task","toast","success","mql","window","matchMedia","Diary","sidebarDocked","matches","sidebarOpen","onSetSidebarOpen","open","mediaQueryChanged","handleAddTask","status","handleUndoChanges","arr","addListener","removeListener","Consumer","context","sidebar","docked","sidebarClassName","touch","contentClassName","pullRight","direction","CheckBoxesVuexy","defaultChecked"],"mappings":"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","file":"static/js/43.3be4b4e1.chunk.js","sourcesContent":["import axios from 'axios'\nimport { history } from '../../../history'\nimport { toast } from 'react-toastify'\n//axios.defaults.baseURL = 'https://lastarzi2.herokuapp.com'\naxios.defaults.baseURL = \"https://paragonheathcare.herokuapp.com\";\n//axios.defaults.baseURL = \"http://localhost:5000\";\n\nexport const getTodos = (routeParams) => {\n  const user = JSON.parse(localStorage.getItem('logInUserData'))._id\n  routeParams.user = user\n  return async (dispatch) => {\n    await axios\n      .get('backendapi/diary/list', {\n        params: routeParams\n      })\n      .then((result) => {\n        //backendapi/diary/list\n        console.log('qqqqqqqqqqqqqqqq', routeParams)\n        console.log('qqqqqqqqqqqqqqqq', result.data)\n        dispatch({\n          type: 'GET_TODOS',\n          todos: result.data,\n          routeParams\n        })\n      })\n      .catch((err) => console.log(err))\n  }\n}\nexport const completeTask = (todo) => {\n  return (dispatch) => {\n    dispatch({ type: 'COMPLETE_TASK', id: todo.id, value: todo.isCompleted })\n  }\n}\n\nexport const starTask = (todo) => {\n  return (dispatch) => {\n    Promise.all([\n      dispatch({ type: 'STAR_TASK', id: todo.id, value: todo.isStarred })\n    ])\n  }\n}\n\nexport const importantTask = (todo) => {\n  return (dispatch) => {\n    Promise.all([\n      dispatch({ type: 'IMPORTANT_TASK', id: todo.id, value: todo.isImportant })\n    ])\n  }\n}\n\nexport const trashTask = (id) => {\n  return (dispatch, getState) => {\n    const params = getState().todoApp.todo.routeParam\n    axios\n      .post('/api/app/todo/trash-todo', id)\n      .then((response) => dispatch({ type: 'TRASH_TASK', id }))\n      .then(dispatch(getTodos(params)))\n  }\n}\n\nexport const updateTodo = (todo) => {\n  console.log('ssssssssssssssss todo', todo)\n  const request = axios.post('/api/apps/todo/update-todo', todo)\n  return (dispatch, getState) => {\n    const params = getState().todoApp.todo.routeParam\n    request.then((response) => {\n      Promise.all([\n        dispatch({\n          type: 'UPDATE_TODO',\n          todos: response.data\n        })\n      ]).then(() => dispatch(getTodos(params)))\n    })\n  }\n}\n\nexport const updateTask = (id, title, desc) => {\n  const ans = {\n    _id: id,\n    title,\n    desc\n  }\n  const request = axios.post('/backendapi/diary/update', ans)\n  return (dispatch) => {\n    dispatch({ type: 'UPDATE_TASK', id, title, desc })\n  }\n}\n\nexport const updateLabel = (id, label) => {\n  return (dispatch, getState) => {\n    dispatch({ type: 'UPDATE_LABEL', label, id })\n  }\n}\n\nexport const addNewTask = (task) => {\n  return (dispatch, getState) => {\n    const params = getState().todoApp.todo.routeParam\n    const user = JSON.parse(localStorage.getItem('logInUserData'))._id\n    task.user = user\n    axios.post('/backendapi/diary/add', task).then((response) => {\n      dispatch({ type: 'ADD_TASK', task })\n      dispatch(getTodos(params))\n      toast.success('Note Added Successfully!!')\n    })\n  }\n}\n\nexport const searchTask = (val) => {\n  return (dispatch) => {\n    dispatch({\n      type: 'SEARCH_TASK',\n      val\n    })\n  }\n}\n\nexport const changeFilter = (filter) => {\n  return (dispatch) => {\n    dispatch({ type: 'CHANGE_FILTER', filter })\n    history.push(`/#/diary/${filter}`)\n    dispatch(getTodos({ filter }))\n  }\n}\n","import React from 'react'\nimport { Button, ListGroup, ListGroupItem } from 'reactstrap'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport { X, Layers, Star, Info, Check, Trash } from 'react-feather'\nimport { connect } from 'react-redux'\nimport { changeFilter } from '../../redux/actions/diary/index'\nclass DiarySidebar extends React.Component {\n  render() {\n    return (\n      <React.Fragment>\n        <span\n          className=\"sidebar-close-icon\"\n          onClick={() => this.props.mainSidebar(false)}\n        >\n          <X size={15} />\n        </span>\n        <div className=\"todo-app-menu\">\n          <div className=\"add-task\">\n            <Button.Ripple\n              block\n              className=\"btn-block my-1\"\n              color=\"primary\"\n              onClick={() => {\n                this.props.addTask('open')\n                this.props.mainSidebar(false)\n              }}\n            >\n              Add Notes\n            </Button.Ripple>\n          </div>\n          <PerfectScrollbar\n            className=\"sidebar-menu-list\"\n            options={{\n              wheelPropagation: false\n            }}\n          >\n            <ListGroup className=\"font-medium-1\">\n              <ListGroupItem\n                className=\"border-0 pt-0\"\n                action\n                onClick={() => {\n                  this.props.changeFilter('all')\n                }}\n                active={\n                  this.props.routerProps.location.pathname === '/diary'\n                    ? true\n                    : false\n                }\n              >\n                <Layers size={22} />\n                <span className=\"align-middle ml-1\">All</span>\n              </ListGroupItem>\n            </ListGroup>\n            <hr />\n            <h5 className=\"mt-2 mb-1 pt-25\">Filters</h5>\n            <ListGroup className=\"font-medium-1\">\n              <ListGroupItem\n                className=\"border-0\"\n                onClick={() => {\n                  this.props.changeFilter('starred')\n                }}\n                active={\n                  this.props.routerProps.location.pathname === '/diary/starred'\n                    ? true\n                    : false\n                }\n              >\n                <Star size={22} />\n                <span className=\"align-middle ml-1\">Starred</span>\n              </ListGroupItem>\n              <ListGroupItem\n                className=\"border-0\"\n                onClick={() => {\n                  this.props.changeFilter('important')\n                }}\n                active={\n                  this.props.routerProps.location.pathname ===\n                  '/diary/important'\n                    ? true\n                    : false\n                }\n              >\n                <Info size={22} />\n                <span className=\"align-middle ml-1\">Important</span>\n              </ListGroupItem>\n              <ListGroupItem\n                className=\"border-0\"\n                onClick={() => {\n                  this.props.changeFilter('completed')\n                }}\n                active={\n                  this.props.routerProps.location.pathname ===\n                  '/diary/completed'\n                    ? true\n                    : false\n                }\n              >\n                <Check size={22} />\n                <span className=\"align-middle ml-1\">Completed</span>\n              </ListGroupItem>\n              <ListGroupItem\n                className=\"border-0\"\n                onClick={() => {\n                  this.props.changeFilter('trashed')\n                }}\n                active={\n                  this.props.routerProps.location.pathname === '/diary/trashed'\n                    ? true\n                    : false\n                }\n              >\n                <Trash size={22} />\n                <span className=\"align-middle ml-1\">Trashed</span>\n              </ListGroupItem>\n            </ListGroup>\n            <hr />\n            <h5 className=\"mt-2 mb-1 pt-25\">Labels</h5>\n            <ListGroup className=\"font-medium-1\">\n              <ListGroupItem\n                className=\"border-0\"\n                onClick={() => {\n                  this.props.changeFilter('personal')\n                }}\n                active={\n                  this.props.routerProps.location.pathname === '/diary/personal'\n                    ? true\n                    : false\n                }\n              >\n                <span className=\"bullet bullet-primary align-middle\" />\n                <span className=\"align-middle ml-1\">Personal</span>\n              </ListGroupItem>\n              <ListGroupItem\n                className=\"border-0\"\n                onClick={() => {\n                  this.props.changeFilter('professional')\n                }}\n                active={\n                  this.props.routerProps.location.pathname ===\n                  '/diary/professional'\n                    ? true\n                    : false\n                }\n              >\n                <span className=\"bullet bullet-warning align-middle\" />\n                <span className=\"align-middle ml-1\">Professional</span>\n              </ListGroupItem>\n              <ListGroupItem\n                className=\"border-0\"\n                onClick={() => {\n                  this.props.changeFilter('others')\n                }}\n                active={\n                  this.props.routerProps.location.pathname === '/diary/others'\n                    ? true\n                    : false\n                }\n              >\n                <span className=\"bullet bullet-success align-middle\" />\n                <span className=\"align-middle ml-1\">Others</span>\n              </ListGroupItem>\n              <ListGroupItem\n                className=\"border-0\"\n                onClick={() => {\n                  this.props.changeFilter('todo')\n                }}\n                active={\n                  this.props.routerProps.location.pathname === '/diary/todo'\n                    ? true\n                    : false\n                }\n              >\n                <span className=\"bullet bullet-danger align-middle\" />\n                <span className=\"align-middle ml-1\">TO DO List</span>\n              </ListGroupItem>\n            </ListGroup>\n          </PerfectScrollbar>\n        </div>\n      </React.Fragment>\n    )\n  }\n}\n\nexport default connect(null, { changeFilter })(DiarySidebar)\n","import React from 'react'\nimport { FormGroup, Input, Alert } from 'reactstrap'\nimport { Menu, Search, Check, Info, Star, Trash } from 'react-feather'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport { connect } from 'react-redux'\nimport {\n  getTodos,\n  completeTask,\n  starTask,\n  importantTask,\n  trashTask,\n  searchTask\n} from '../../redux/actions/diary/index'\nimport Checkbox from '../../components/@vuexy/checkbox/CheckboxesVuexy'\nclass DiaryList extends React.Component {\n  static getDerivedStateFromProps(props, state) {\n    if (props.app.todo.routeParam !== state.currentLocation) {\n      return {\n        todos: props.app.todo.todos\n      }\n    }\n    // Return null if the state hasn't changed\n    return null\n  }\n  state = {\n    todos: [],\n    handleUpdateTask: null,\n    currentLocation: this.props.routerProps.location.pathname,\n    value: ''\n  }\n  async componentDidMount() {\n    await this.props.getTodos(this.props.routerProps.match.params)\n    this.setState({\n      todos: this.props.app.todo.todos,\n      handleUpdateTask: this.props.handleUpdateTask\n    })\n  }\n\n  handleOnChange = (e) => {\n    this.setState({ value: e.target.value })\n    this.props.searchTask(e.target.value)\n  }\n\n  render() {\n    const { todos, handleUpdateTask, value } = this.state\n    let routerFilter = this.props.routerProps.match.params.filter\n    let todosArr = value.length ? this.props.app.todo.filteredTodos : todos\n\n    if (todosArr === undefined ) {\n      return (\n        <div className=\"fallback-spinner vh-100\">\n          {/* <img className=\"fallback-logo\" src={logo} alt=\"logo\" /> */}\n          <div className=\"loading\">\n            <div className=\"effect-1 effects\"></div>\n            <div className=\"effect-2 effects\"></div>\n            <div className=\"effect-3 effects\"></div>\n          </div>\n        </div>\n      )\n    }\n    let renderTodos =\n      todosArr.length > 0 ? (\n        todosArr.map((todo, i) => {\n          var options = {\n            weekday: 'long',\n            year: 'numeric',\n            month: 'long',\n            day: 'numeric'\n          }\n          var today = new Date(todo.createdAt)\n          return (\n            <li\n              style={{ border: 'none', padding: '0 1.6rem' }}\n              className={`todo-item ${todo.isCompleted ? 'completed' : ''}`}\n              key={i}\n              onClick={() => {\n                handleUpdateTask(todo)\n              }}\n            >\n              <Alert\n                className=\"mt-1\"\n                color={todo.isImportant ? 'danger' : 'primary'}\n              >\n                <div className=\"todo-title-wrapper d-flex justify-content-between mb-50\">\n                  <div className=\"todo-title-area d-flex align-items-center\">\n                    <div className=\"title-wrapper d-flex\">\n                      {/* <Checkbox\n                      color=\"primary\"\n                      className=\"user-checkbox\"\n                      icon={<Check className=\"vx-icon\" size={12} />}\n                      label={\"\"}\n                      checked={todo.isCompleted}\n                      size=\"sm\"\n                      onClick={e => {\n                        e.stopPropagation()\n                        this.props.completeTask(todo)\n                      }}\n                      onChange={e => e.stopPropagation()}\n                    /> */}\n                      <h6 className=\"todo-title mt-50 mx-50\">{todo.title}</h6>\n                    </div>\n\n                    {todo.tags.length > 0 ? (\n                      <div className=\"chip-wrapper\">\n                        {todo.tags.map((tag, i) => (\n                          <div className=\"chip mb-0\" key={i}>\n                            <div className=\"chip-body\">\n                              <span className=\"chip-text\">\n                                <span\n                                  className={`bullet bullet-${\n                                    tag === 'backend'\n                                      ? 'warning'\n                                      : tag === 'doc'\n                                      ? 'success'\n                                      : tag === 'bug'\n                                      ? 'danger'\n                                      : 'primary'\n                                  } bullet-xs`}\n                                />\n                                <span className=\"text-capitalize ml-25\">\n                                  {tag}\n                                </span>\n                              </span>\n                            </div>\n                          </div>\n                        ))}\n                      </div>\n                    ) : null}\n                  </div>\n\n                  <div\n                    className={`todo-item-action d-flex ${\n                      routerFilter === 'trashed' ? 'justify-content-end' : ''\n                    }`}\n                  >\n                    <div\n                      className={`todo-item-info d-inline-block ${\n                        routerFilter === 'trashed' ? 'mr-1' : 'mr-1 mr-sm-0'\n                      }`}\n                      onClick={(e) => {\n                        e.stopPropagation()\n                        this.props.importantTask(todo)\n                      }}\n                    >\n                      <Info\n                        size={17}\n                        className={`${todo.isImportant ? 'text-danger' : ''}`}\n                      />\n                    </div>\n                    <div\n                      className=\"todo-item-favorite d-inline-block mr-1 mr-sm-0\"\n                      onClick={(e) => {\n                        e.stopPropagation()\n                        this.props.starTask(todo)\n                      }}\n                    >\n                      <Star\n                        size={17}\n                        className={`${todo.isStarred ? 'text-warning' : ''}`}\n                      />\n                    </div>\n                    {routerFilter !== 'trashed' ? (\n                      <div\n                        className=\"todo-item-delete d-inline-block mr-1 mr-sm-0\"\n                        onClick={(e) => {\n                          e.stopPropagation()\n                          this.props.trashTask(todo.id)\n                        }}\n                      >\n                        <Trash size={17} />\n                      </div>\n                    ) : null}\n                  </div>\n                </div>\n                <p style={{ fontSize: '8px' }}>\n                  {today.toLocaleDateString('en-US', options)}\n                </p>\n                {todo.desc.length > 0 ? (\n                  <p\n                    className=\"todo-desc mb-0\"\n                    style={{ wordBreak: 'break-all', whiteSpace: 'normal' }}\n                  >\n                    {todo.desc}\n                  </p>\n                ) : (\n                  ''\n                )}\n              </Alert>\n            </li>\n          )\n        })\n      ) : (\n        <p className=\"p-1 text-center mt-2 font-medium-3 text-bold-500\">\n          No tasks at this time\n        </p>\n      )\n\n    return (\n      <div className=\"content-right\">\n        <div className=\"todo-app-area\">\n          <div className=\"todo-app-list-wrapper\">\n            <div className=\"todo-app-list\">\n              <div className=\"app-fixed-search\">\n                <div\n                  className=\"sidebar-toggle d-inline-block d-lg-none\"\n                  onClick={() => this.props.mainSidebar(true)}\n                >\n                  <Menu size={24} />\n                </div>\n                <FormGroup\n                  style={{\n                    display: 'flex',\n                    margin: 'auto',\n                    justifyContent: 'center'\n                  }}\n                  className=\"position-relative has-icon-left\"\n                >\n                  <div style={{ borderRadius: '1.428rem' }}>\n                    <div className=\"form-control-position\">\n                      <Search size={15} />\n                    </div>\n                    <Input\n                      style={{\n                        width: '100%'\n                      }}\n                      type=\"text\"\n                      placeholder=\"Search...\"\n                      onChange={(e) => this.handleOnChange(e)}\n                      value={value}\n                    />\n                  </div>\n                </FormGroup>\n              </div>\n              <PerfectScrollbar\n                className=\"todo-task-list\"\n                options={{\n                  wheelPropagation: false\n                }}\n              >\n                <ul className=\"todo-task-list-wrapper\">{renderTodos}</ul>\n              </PerfectScrollbar>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    app: state.todoApp\n  }\n}\nexport default connect(mapStateToProps, {\n  getTodos,\n  completeTask,\n  starTask,\n  importantTask,\n  trashTask,\n  searchTask\n})(DiaryList)\n","import React from 'react'\nimport {\n  Input,\n  Button,\n  FormGroup,\n  UncontrolledDropdown,\n  DropdownItem,\n  DropdownMenu,\n  DropdownToggle\n} from 'reactstrap'\nimport { toast } from 'react-toastify'\nimport Select from 'react-select'\nimport { X, Info, Star, Tag, Check } from 'react-feather'\nimport Checkbox from '../../components/@vuexy/checkbox/CheckboxesVuexy'\nimport PerfectScrollbar from 'react-perfect-scrollbar'\nimport VideoRecorder from 'react-video-recorder'\nimport { Recorder } from 'react-voice-recorder'\nimport 'react-voice-recorder/dist/index.css'\nimport { connect } from 'react-redux'\nimport {\n  starTask,\n  completeTask,\n  importantTask,\n  updateTask,\n  updateLabel,\n  addNewTask\n} from '../../redux/actions/diary/index'\nconst colourOptions1 = [\n  {\n    value: 'Text',\n    label: 'Text',\n    color: '#00B8D9',\n    isFixed: true\n  },\n  {\n    value: 'Scribble',\n    label: 'Scribble',\n    color: '#00B8D9',\n    isFixed: true\n  },\n  {\n    value: 'Attachment',\n    label: 'Attachment',\n    color: '#00B8D9',\n    isFixed: true\n  },\n  {\n    value: 'Voice',\n    label: 'Voice',\n    color: '#0052CC',\n    isFixed: true\n  },\n  {\n    value: 'Video',\n    label: 'Video',\n    color: '#0052CC',\n    isFixed: true\n  }\n]\nclass TaskSidebar extends React.Component {\n  // static getDerivedStateFromProps (props, state){\n  //   if (\n  //    ( props.taskToUpdate !== null &&\n  //     props.taskToUpdate.title !== state.taskTitle) ||\n  //     (props.taskToUpdate !== null && props.taskToUpdate.isCompleted !== state.newTask.isCompleted)\n  //   ) {\n  //     let todosArr = props.app.todo.todos\n  //     let receivedTask =\n  //       props.taskToUpdate !== null ? props.taskToUpdate : 1\n  //     let filteredTask = todosArr.filter(i => i.id === receivedTask.id)\n  //     let taskToUpdate, taskTitle, taskDesc\n  //     filteredTask.map(task => {\n  //       return (\n  //         (taskToUpdate = task),\n  //         (taskTitle = task.title),\n  //         (taskDesc = task.desc)\n  //       )\n  //     })\n  //     return {\n  //       taskToUpdate,\n  //       taskTitle,\n  //       taskDesc\n  //     }\n  //   }\n  //   return null\n  // }\n\n  state = {\n    audioDetails: {\n      url: null,\n      blob: null,\n      chunks: null,\n      duration: {\n        h: 0,\n        m: 0,\n        s: 0\n      }\n    },\n    ptype: '',\n    taskToUpdate: null,\n    taskTitle: '',\n    taskDesc: '',\n    taskStatus: false,\n    taskStarred: false,\n    taskImportant: false,\n    newTask: {\n      title: '',\n      desc: '',\n      tags: [],\n      isCompleted: false,\n      isImportant: false,\n      isStarred: false\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (\n      (this.props.taskToUpdate !== null &&\n        this.state.taskToUpdate !== this.props.taskToUpdate) ||\n      (this.props.taskToUpdate !== null &&\n        this.state.taskStatus !== this.props.taskToUpdate.isCompleted) ||\n      (this.props.taskToUpdate !== null &&\n        this.state.taskStarred !== this.props.taskToUpdate.isStarred) ||\n      (this.props.taskToUpdate !== null &&\n        this.state.taskImportant !== this.props.taskToUpdate.isImportant)\n    ) {\n      this.setState({\n        taskToUpdate: this.props.taskToUpdate,\n        taskTitle: this.props.taskToUpdate.title,\n        taskDesc: this.props.taskToUpdate.desc,\n        taskStatus: this.props.taskToUpdate.isCompleted,\n        taskStarred: this.props.taskToUpdate.isStarred,\n        taskImportant: this.props.taskToUpdate.isImportant\n      })\n    } else {\n      return\n    }\n  }\n  handleAudioStop = (data) => {\n    console.log(data)\n    this.setState({ audioDetails: data })\n  }\n  handleAudioUpload = (file) => {\n    console.log(file)\n  }\n  handleRest = () => {\n    const reset = {\n      url: null,\n      blob: null,\n      chunks: null,\n      duration: {\n        h: 0,\n        m: 0,\n        s: 0\n      }\n    }\n    this.setState({ audioDetails: reset })\n  }\n\n  handleNewTaskTags = (tag) => {\n    let tagsArr = this.state.newTask.tags\n    if (tagsArr.includes(tag)) {\n      tagsArr.splice(tagsArr.indexOf(tag), 1)\n    } else {\n      tagsArr.push(tag)\n    }\n    this.setState({\n      ...this.state.newTask,\n      tags: tag\n    })\n  }\n\n  renderTags = (taskArr) => {\n    return taskArr.map((tag, i) => (\n      <div className=\"chip mb-0 mr-50\" key={i}>\n        <div className=\"chip-body\">\n          <span className=\"chip-text\">\n            <span\n              className={`bullet bullet-${\n                tag === 'professional'\n                  ? 'warning'\n                  : tag === 'others'\n                  ? 'success'\n                  : tag === 'todo'\n                  ? 'danger'\n                  : 'primary'\n              } bullet-xs`}\n            />\n            <span className=\"text-capitalize ml-25\">{tag}</span>\n          </span>\n        </div>\n      </div>\n    ))\n  }\n\n  render() {\n    const { taskToUpdate, taskTitle, taskDesc, newTask, taskStatus } =\n      this.state\n\n    return (\n      <div\n        className={`task-sidebar ${\n          this.props.addTaskState === true ? 'show' : ''\n        }`}\n      >\n        <div className=\"task-header\">\n          <div className=\"d-flex justify-content-between\">\n            <div className=\"task-type-title text-bold-600\">\n              <h3>\n                {this.props.taskToUpdate && this.props.taskToUpdate.id\n                  ? 'Update Note'\n                  : 'Add Note'}\n              </h3>\n            </div>\n            <div className=\"close-icon\">\n              <X\n                className=\"cursor-pointer\"\n                size={20}\n                onClick={() => {\n                  this.props.addTask('close')\n                }}\n              />\n            </div>\n          </div>\n        </div>\n\n        <PerfectScrollbar>\n          <div className=\"task-body\">\n            <div className=\"d-flex justify-content-between mb-2\">\n              <div className=\"mark-complete\">\n                {this.props.taskToUpdate && this.props.taskToUpdate.id && (\n                  <Checkbox\n                    color=\"primary\"\n                    className=\"user-checkbox\"\n                    icon={<Check className=\"vx-icon\" size={15} />}\n                    label={''}\n                    checked={taskStatus}\n                    onChange={(e) => {\n                      this.props.completeTask(this.props.taskToUpdate)\n                    }}\n                  />\n                )}\n              </div>\n              <div className=\"task-actions\">\n                <Info\n                  size={20}\n                  className={`mr-50 ${\n                    (this.props.taskToUpdate !== null &&\n                      this.state.taskImportant) ||\n                    newTask.isImportant\n                      ? 'text-success'\n                      : ''\n                  }`}\n                  onClick={() => {\n                    if (this.props.taskToUpdate !== null) {\n                      this.props.importantTask(this.props.taskToUpdate)\n                    } else {\n                      this.setState({\n                        newTask: {\n                          ...this.state.newTask,\n                          isImportant: !this.state.newTask.isImportant\n                        }\n                      })\n                    }\n                  }}\n                />\n                <Star\n                  size={20}\n                  className={`mr-50 ${\n                    (this.props.taskToUpdate !== null &&\n                      this.state.taskStarred) ||\n                    newTask.isStarred\n                      ? 'text-warning'\n                      : ''\n                  }`}\n                  onClick={() => {\n                    if (this.props.taskToUpdate !== null) {\n                      this.props.starTask(this.props.taskToUpdate)\n                    } else {\n                      this.setState({\n                        newTask: {\n                          ...this.state.newTask,\n                          isStarred: !this.state.newTask.isStarred\n                        }\n                      })\n                    }\n                  }}\n                />\n                <UncontrolledDropdown className=\"d-inline-block\">\n                  <DropdownToggle tag=\"span\">\n                    <Tag className=\"mr-50\" size={20} />\n                  </DropdownToggle>\n                  <DropdownMenu tag=\"ul\" right>\n                    <DropdownItem tag=\"li\">\n                      <Checkbox\n                        color=\"primary\"\n                        className=\"user-checkbox\"\n                        icon={<Check className=\"vx-icon\" size={12} />}\n                        label={'Personal'}\n                        checked={\n                          (this.props.taskToUpdate !== null &&\n                            this.props.taskToUpdate.tags.includes(\n                              'personal'\n                            )) ||\n                          newTask.tags.includes('personal')\n                            ? true\n                            : false\n                        }\n                        size=\"sm\"\n                        onChange={(e) => {\n                          e.stopPropagation()\n                          if (this.props.taskToUpdate !== null)\n                            this.props.updateLabel(taskToUpdate.id, 'personal')\n                          else this.handleNewTaskTags('personal')\n                        }}\n                      />\n                    </DropdownItem>\n                    <DropdownItem tag=\"li\">\n                      <Checkbox\n                        color=\"primary\"\n                        className=\"user-checkbox\"\n                        icon={<Check className=\"vx-icon\" size={12} />}\n                        label={'Professional'}\n                        checked={\n                          (this.props.taskToUpdate !== null &&\n                            this.props.taskToUpdate.tags.includes(\n                              'professional'\n                            )) ||\n                          newTask.tags.includes('professional')\n                            ? true\n                            : false\n                        }\n                        size=\"sm\"\n                        onClick={(e) => e.stopPropagation()}\n                        onChange={(e) => {\n                          e.stopPropagation()\n                          if (this.props.taskToUpdate !== null)\n                            this.props.updateLabel(\n                              taskToUpdate.id,\n                              'professional'\n                            )\n                          else this.handleNewTaskTags('professional')\n                        }}\n                      />\n                    </DropdownItem>\n                    <DropdownItem tag=\"li\">\n                      <Checkbox\n                        color=\"primary\"\n                        className=\"user-checkbox\"\n                        icon={<Check className=\"vx-icon\" size={12} />}\n                        label={'Others'}\n                        checked={\n                          (this.props.taskToUpdate !== null &&\n                            this.props.taskToUpdate.tags.includes('others')) ||\n                          newTask.tags.includes('others')\n                            ? true\n                            : false\n                        }\n                        size=\"sm\"\n                        onClick={(e) => e.stopPropagation()}\n                        onChange={(e) => {\n                          e.stopPropagation()\n                          if (this.props.taskToUpdate !== null)\n                            this.props.updateLabel(taskToUpdate.id, 'others')\n                          else this.handleNewTaskTags('others')\n                        }}\n                      />\n                    </DropdownItem>\n                    <DropdownItem tag=\"li\">\n                      <Checkbox\n                        color=\"primary\"\n                        className=\"user-checkbox\"\n                        icon={<Check className=\"vx-icon\" size={12} />}\n                        label={'TO DO List'}\n                        checked={\n                          (this.props.taskToUpdate !== null &&\n                            this.props.taskToUpdate.tags.includes('todo')) ||\n                          newTask.tags.includes('todo')\n                            ? true\n                            : false\n                        }\n                        size=\"sm\"\n                        onClick={(e) => e.stopPropagation()}\n                        onChange={(e) => {\n                          e.stopPropagation()\n                          if (this.props.taskToUpdate !== null)\n                            this.props.updateLabel(taskToUpdate.id, 'todo')\n                          else this.handleNewTaskTags('todo')\n                        }}\n                      />\n                    </DropdownItem>\n                  </DropdownMenu>\n                </UncontrolledDropdown>\n              </div>\n            </div>\n\n            <FormGroup className=\"form-label-group\">\n              <Select\n                className=\"React\"\n                classNamePrefix=\"select\"\n                // defaultValue={colourOptions1[0]}\n\n                ref={this.state.selectAssetRef}\n                name=\"color\"\n                options={colourOptions1}\n                isClearable={true}\n                placeholder=\"Select Message Type...\"\n                onChange={(e) => {\n                  this.setState({\n                    ptype: e ? e.value : ''\n                  })\n                }}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Input\n                type=\"text\"\n                placeholder=\"Title\"\n                value={\n                  this.props.taskToUpdate !== null ? taskTitle : newTask.title\n                }\n                onChange={(e) => {\n                  if (this.props.taskToUpdate !== null) {\n                    this.setState({\n                      taskTitle: e.target.value\n                    })\n                  } else {\n                    this.setState({\n                      newTask: {\n                        ...this.state.newTask,\n                        title: e.target.value\n                      }\n                    })\n                  }\n                }}\n              />\n            </FormGroup>\n            {this.state.ptype === 'Video' && (\n              <VideoRecorder\n                onRecordingComplete={(videoBlob) => {\n                  // Do something with the video...\n                  console.log('videoBlob', videoBlob)\n                }}\n              />\n            )}\n            {this.state.ptype === 'Voice' && (\n              <Recorder\n                record={true}\n                title={'New recording'}\n                audioURL={this.state.audioDetails.url}\n                showUIAudio\n                handleAudioStop={(data) => this.handleAudioStop(data)}\n                handleAudioUpload={(data) => this.handleAudioUpload(data)}\n                handleRest={() => this.handleRest()}\n              />\n            )}\n            <FormGroup>\n              <Input\n                type=\"textarea\"\n                placeholder=\"Description\"\n                rows=\"5\"\n                value={\n                  this.props.taskToUpdate !== null ? taskDesc : newTask.desc\n                }\n                onChange={(e) => {\n                  if (this.props.taskToUpdate !== null) {\n                    this.setState({\n                      taskDesc: e.target.value\n                    })\n                  } else {\n                    this.setState({\n                      newTask: {\n                        ...this.state.newTask,\n                        desc: e.target.value\n                      }\n                    })\n                  }\n                }}\n              />\n            </FormGroup>\n            <div className=\"chip-wrapper my-1 d-flex flex-wrap\">\n              {this.props.taskToUpdate !== null &&\n              this.props.taskToUpdate.tags &&\n              this.props.taskToUpdate.tags.length > 0\n                ? this.renderTags(this.props.taskToUpdate.tags)\n                : null}\n            </div>\n            <div className=\"d-flex justify-content-end\">\n              <Button.Ripple\n                outline\n                className=\"mr-1 mb-1\"\n                color=\"secondary\"\n                onClick={() => {\n                  this.props.addTask('close')\n                  this.setState({\n                    newTask: {\n                      title: '',\n                      desc: '',\n                      tags: [],\n                      isCompleted: false,\n                      isImportant: false,\n                      isStarred: false\n                    }\n                  })\n                }}\n              >\n                Cancel\n              </Button.Ripple>{' '}\n              <Button.Ripple\n                className=\"mb-1\"\n                color=\"warning\"\n                onClick={() => {\n                  console.log('taskToUpdate', taskToUpdate)\n                  //toast.success('Note Added Successfully!!')\n\n                  if (this.props.taskToUpdate !== null) {\n                    this.props.updateTask(taskToUpdate._id, taskTitle, taskDesc)\n                  } else {\n                    this.props.addNewTask(this.state.newTask)\n                  }\n                  this.props.addTask('close')\n                  this.setState({\n                    newTask: {\n                      title: '',\n                      desc: '',\n                      tags: [],\n                      isCompleted: false,\n                      isImportant: false,\n                      isStarred: false\n                    }\n                  })\n                }}\n                disabled={\n                  taskTitle.length > 0 || newTask.title.length > 0\n                    ? false\n                    : true\n                }\n              >\n                {taskToUpdate &&\n                taskToUpdate.id &&\n                this.props.taskToUpdate !== null\n                  ? 'Update'\n                  : 'Add'}\n              </Button.Ripple>\n            </div>\n          </div>\n        </PerfectScrollbar>\n      </div>\n    )\n  }\n}\nconst mapStateToProps = (state) => {\n  return {\n    app: state.todoApp\n  }\n}\n\nexport default connect(mapStateToProps, {\n  completeTask,\n  importantTask,\n  starTask,\n  updateTask,\n  updateLabel,\n  addNewTask\n})(TaskSidebar)\n","import React from 'react'\nimport Sidebar from 'react-sidebar'\nimport { ContextLayout } from '../../utility/context/Layout'\nimport DiarySidebar from './DiarySidebar'\nimport DiaryList from './DiaryList'\nimport TaskSidebar from './TaskSidebar'\nimport { ToastContainer } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport '../../assets/scss/plugins/extensions/toastr.scss'\nimport '../../assets/scss/pages/app-todo.scss'\nconst mql = window.matchMedia(`(min-width: 992px)`)\n\nclass Diary extends React.Component {\n  state = {\n    addTask: false,\n    sidebarDocked: mql.matches,\n    sidebarOpen: false,\n    taskToUpdate: null,\n    prevState: null\n  }\n  UNSAFE_componentWillMount() {\n    mql.addListener(this.mediaQueryChanged)\n  }\n\n  componentWillUnmount() {\n    mql.removeListener(this.mediaQueryChanged)\n  }\n\n  onSetSidebarOpen = (open) => {\n    this.setState({ sidebarOpen: open })\n  }\n\n  mediaQueryChanged = () => {\n    this.setState({ sidebarDocked: mql.matches, sidebarOpen: false })\n  }\n\n  handleAddTask = (status) => {\n    status === 'open'\n      ? this.setState({ addTask: true })\n      : this.setState({ addTask: false, taskToUpdate: null })\n  }\n  handleUpdateTask = (todo) => {\n    if (todo !== undefined) {\n      this.setState({ addTask: true, taskToUpdate: todo })\n    } else {\n      this.setState({ taskToUpdate: null })\n    }\n  }\n\n  handleUndoChanges = (arr) => {\n    this.setState({\n      prevState: arr\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <ToastContainer />\n        <h2 className=\"warning\">Secret Diary</h2>\n        <div className=\"todo-application position-relative\">\n          <div\n            className={`app-content-overlay ${\n              this.state.addTask || this.state.sidebarOpen ? 'show' : ''\n            }`}\n            onClick={() => {\n              this.handleAddTask('close')\n              this.onSetSidebarOpen(false)\n            }}\n          />\n          <ContextLayout.Consumer>\n            {(context) => (\n              <Sidebar\n                sidebar={\n                  <DiarySidebar\n                    routerProps={this.props}\n                    addTask={this.handleAddTask}\n                    mainSidebar={this.onSetSidebarOpen}\n                  />\n                }\n                docked={this.state.sidebarDocked}\n                open={this.state.sidebarOpen}\n                sidebarClassName=\"sidebar-content todo-sidebar d-flex\"\n                touch={false}\n                contentClassName=\"sidebar-children d-none\"\n                pullRight={context.state.direction === 'rtl'}\n              >\n                \"\"\n              </Sidebar>  \n            )}\n          </ContextLayout.Consumer>\n          <DiaryList\n            routerProps={this.props}\n            handleUpdateTask={this.handleUpdateTask}\n            mainSidebar={this.onSetSidebarOpen}\n            prevState={this.state.prevState}\n          />\n          <TaskSidebar\n            addTask={this.handleAddTask}\n            addTaskState={this.state.addTask}\n            taskToUpdate={this.state.taskToUpdate}\n            newTask={this.state.newTask}\n            mainSidebar={this.onSetSidebarOpen}\n            handleUndoChanges={this.handleUndoChanges}\n          />\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default Diary\n","import React from 'react'\nclass CheckBoxesVuexy extends React.Component {\n  render() {\n    return (\n      <div\n        className={`vx-checkbox-con ${\n          this.props.className ? this.props.className : ''\n        } vx-checkbox-${this.props.color}`}\n      >\n        <input\n          type=\"checkbox\"\n          defaultChecked={this.props.defaultChecked}\n          checked={this.props.checked}\n          value={this.props.value}\n          disabled={this.props.disabled}\n          onClick={this.props.onClick ? this.props.onClick : null}\n          onChange={this.props.onChange ? this.props.onChange : null}\n        />\n        <span\n          className={`vx-checkbox vx-checkbox-${\n            this.props.size ? this.props.size : 'md'\n          }`}\n        >\n          <span className=\"vx-checkbox--check\">{this.props.icon}</span>\n        </span>\n        <span>{this.props.label}</span>\n      </div>\n    )\n  }\n}\n\nexport default CheckBoxesVuexy\n"],"sourceRoot":""}